{"componentChunkName":"component---src-templates-note-template-tsx","path":"/groovy/","result":{"data":{"markdownRemark":{"html":"<p>get env vars: <a href=\"http://www.mytechtoday.com/2009/01/read-environment-variables-with-groovy.html\">http://www.mytechtoday.com/2009/01/read-environment-variables-with-groovy.html</a></p>\n<pre><code class=\"language-text\">def env = System.getenv()\nprintln env['HOME']\n</code></pre>\n<p>executing complex shell: <a href=\"http://www.joergm.com/2010/09/executing-shell-commands-in-groovy/\">http://www.joergm.com/2010/09/executing-shell-commands-in-groovy/</a></p>\n<p><a href=\"https://gist.github.com/kaltepeter/e5cbe4b7c1ec3e0f2ea4c54f93ee520a\">https://gist.github.com/kaltepeter/e5cbe4b7c1ec3e0f2ea4c54f93ee520a</a> for example</p>\n<h2>chaining closures</h2>\n<p><a href=\"http://mrhaki.blogspot.com/2011/04/groovy-goodness-chain-closures-together.html\">http://mrhaki.blogspot.com/2011/04/groovy-goodness-chain-closures-together.html</a></p>\n<h2>scripts</h2>\n<p><a href=\"http://scottfrederick.cfapps.io/blog/2012/03/23/Wrapping-a-Groovy-script-with-Gradle\">http://scottfrederick.cfapps.io/blog/2012/03/23/Wrapping-a-Groovy-script-with-Gradle</a></p>\n<h3>run from jar file</h3>\n<pre><code class=\"language-bash\">docker exec -it jenkinsmaster cli -remoting groovy jar:file:./build/llibs/jenkins-1.0-sources.jar'!'/ConfigureSlaveNode.groovy\n</code></pre>\n<pre><code class=\"language-groovy\">  manifest {\n    attributes 'Main-Class': mainClassName\n  }\n</code></pre>\n<h3>get parent directory path</h3>\n<pre><code class=\"language-groovy\">def pwd = new File(getClass().protectionDomain.codeSource.location.path).parent\ndef seed = new File(\"${pwd}/SeedPipelinesJob.groovy\").text\n</code></pre>\n<h3>load groovy from other script</h3>\n<p><a href=\"https://www.jmdawson.net/blog/2014/08/18/using-functions-from-one-groovy-script-in-another/\">https://www.jmdawson.net/blog/2014/08/18/using-functions-from-one-groovy-script-in-another/</a></p>\n<p><a href=\"http://groovy-lang.org/structure.html#_scripts_versus_classes\">http://groovy-lang.org/structure.html#_scripts_versus_classes</a></p>\n<blockquote>\n<p>Reflecting on the problem that evening, I recalled that every groovy script is more or less a class with the name of the file in which the script resides ((This behavior is hinted at in the Scripts and Classes section of the Groovy documentation</p>\n</blockquote>\n<pre><code class=\"language-groovy\">thing = new getThing()\nprintln thing.getThingList()\n</code></pre>\n<h2>@Canonical</h2>\n<p><a href=\"https://mrhaki.blogspot.com/2011/05/groovy-goodness-canonical-annotation-to.html\">https://mrhaki.blogspot.com/2011/05/groovy-goodness-canonical-annotation-to.html</a></p>\n<p>Adds @ToString, @EqualsAndHashCode and @TupleConstructor annotations.</p>\n<h3>example code</h3>\n<pre><code class=\"language-groovy\">package com.mrll.javelin.slack\n\nimport groovy.transform.Canonical\nimport groovy.util.logging.Log4j\n\n@Log4j\n//@Canonical\nclass Message implements Serializable {\n  String text = \"\"\n  List&#x3C;Attachment> attachments = []\n  String channel = ''\n  String channelName = ''\n\n  Message() {\n    this([:])\n  }\n\n  Message(Map map) {\n    log.debug \"heretaco: ${map}\"\n    println \"herepizza23: ${map}\"\n    def roomName = map['channelName'] as String\n    log.debug \"here2: ${roomName}\"\n    this.addChannel(roomName)\n    log.debug \"room: ${roomName} ${roomName.dump()}\"\n  }\n\n  void addChannel(String roomName) {\n    def room = Rooms.getIfPresent(roomName)\n    def roomId = room.roomId\n    log.debug \"setChannel: ${room.dump()} ${roomId}\"\n    this.channel = roomId\n  }\n}\n</code></pre>\n<h3>example useage</h3>\n<pre><code class=\"language-groovy\">import com.mrll.javelin.slack.Message\n\ndef message = new Message(text: 'yo', channelName: 'NODE_DEFAULT')\ndef message2 = new Message(text: 'yo', channelName: 'NODE_DEFAULT')\nprintln message\n\nassert message == message2\n</code></pre>\n<h3>output without @Canonical</h3>\n<pre><code class=\"language-bash\">herepizza23: [text:yo, channelName:NODE_DEFAULT]\nAssertion failed:\nherepizza23: [text:yo, channelName:NODE_DEFAULT]\n\ncom.mrll.javelin.slack.Message@68c72235\nassert message == message2\n       |       |  |\n       |       |  com.mrll.javelin.slack.Message@10959ece\n       |       false\n       com.mrll.javelin.slack.Message@68c72235\n\n</code></pre>\n<pre><code class=\"language-bash\">herepizza23: [text:yo2, channelName:NODE_DEFAULT]\nherepizza23: [text:yo, channelName:NODE_DEFAULT]\ncom.mrll.javelin.slack.Message@1f97cf0d\nAssertion failed:\n\nassert message == message2\n       |       |  |\n       |       |  com.mrll.javelin.slack.Message@140c9f39\n       |       false\n       com.mrll.javelin.slack.Message@1f97cf0d\n\n</code></pre>\n<h3>output WITH @Canonical</h3>\n<pre><code class=\"language-bash\">herepizza231: [text:yo, channelName:NODE_DEFAULT]\nherepizza231: [text:yo, channelName:NODE_DEFAULT]\ncom.mrll.javelin.slack.Message(, [], CET6MM86B, )\n</code></pre>\n<pre><code class=\"language-bash\">herepizza231: [text:yo2, channelName:NODE_DEFAULT]\nherepizza231: [text:yo, channelName:NODE_DEFAULT]\ncom.mrll.javelin.slack.Message(, [], CET6MM86B, )\n</code></pre>\n<h2>AST</h2>\n<p><a href=\"http://docs.groovy-lang.org/latest/html/api/groovy/transform/package-summary.html\">http://docs.groovy-lang.org/latest/html/api/groovy/transform/package-summary.html</a></p>\n<p>Browser\n<a href=\"https://melix.github.io/ast-workshop/exercise1-hints.html\">https://melix.github.io/ast-workshop/exercise1-hints.html</a></p>\n<pre><code class=\"language-bash\">ctrl + t\n# mac\ncommand + t\n</code></pre>\n<h3>groovy transforms</h3>\n<p><a href=\"https://github.com/apache/groovy/blob/2d17694153d787f8a9c9712d94165e9891a7f29a/src/main/java/org/codehaus/groovy/transform\">https://github.com/apache/groovy/blob/2d17694153d787f8a9c9712d94165e9891a7f29a/src/main/java/org/codehaus/groovy/transform</a></p>\n<h2>console</h2>\n<p><a href=\"https://swalsh.org/blog/running-the-groovy-console-from-gradle/\">https://swalsh.org/blog/running-the-groovy-console-from-gradle/</a></p>\n<h2>spock</h2>\n<p><a href=\"https://thejavatar.com/testing-with-spock/\">https://thejavatar.com/testing-with-spock/</a></p>","frontmatter":{"date":"February 03, 2019","title":"Groovy","tags":["language"]}}},"pageContext":{"slug":"/groovy/"}},"staticQueryHashes":["1865044719","3489759178","3649515864"],"slicesMap":{}}