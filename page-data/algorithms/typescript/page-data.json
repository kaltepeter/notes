{"componentChunkName":"component---src-templates-note-template-tsx","path":"/algorithms/typescript/","result":{"data":{"markdownRemark":{"html":"<p><a href=\"https://itnext.io/permutations-combinations-algorithms-cheat-sheet-68c14879aba5\">https://itnext.io/permutations-combinations-algorithms-cheat-sheet-68c14879aba5</a></p>\n<p><a href=\"https://github.com/trekhleb/javascript-algorithms\">https://github.com/trekhleb/javascript-algorithms</a></p>\n<h2>Cartesian Product, Permutations</h2>\n<p>example: get all permutations of coords x,y,z for {0,1,2} +- 1</p>\n<pre><code class=\"language-typescript\">const xRange = [-1,0,1];\nconst yRange = [0,1,2];\nconst zRange = [1,2,3];\n\nfor (const x of xRange) {\n    for (const y of yRange) {\n        for (const z of zRange) {\n            console.log([x, y, z]);\n        }\n    }\n}\n</code></pre>\n<h2>Manhatten Distance</h2>\n<pre><code class=\"language-tsx\">let pointA = [1105,-1205,1229]\nlet pointB = [-92,-2380,-20]\n\nfunction manhattenDist(p1: number[], p2: number[]) {\n    return p1.reduce((acc, v, idx) => {\n        return acc += Math.abs(v - pointB[idx])\n    }, 0)\n}\n// ...\n</code></pre>\n<p><a href=\"https://www.typescriptlang.org/play?#code/DYUwLgBADg9glgOzAQQgXggbQIzYAwCsANALTYBMhRF5AnALoBQoksiYAQulibeaeQDMADjwC8TRgDMArggDGYODAQQAtgEMEACw1gwIBABE4AZzAAKKNgBcEBDLUAjEACdM9ItHJ2Hztx4AlBAA3owQERCu4DKuqtYAdNEAJjLyIBYWGvLyXgBuXnDJAB7BaAB8oeGRNdFgsarZ8hAA1BgAsnraCRpOphZ5ECTQ8EgcmEXF9IHVEQC+Xngzc4zM4OrJ3Jo6egbGZpZsSMhER5wzjPIqpjCgPaambpZqm2hvEIIAbOTYXgBEnR2+kMEGSBy06Qgpm0MBkwE2IAAjjINMAPt9sH8ZlcEDc7sAYABzCwArS6YGqMHmCB2P5eF6BIA\">Playground Link</a></p>","frontmatter":{"date":"April 11, 2021","title":"Typescript References","tags":null}}},"pageContext":{"slug":"/algorithms/typescript/"}},"staticQueryHashes":["1865044719","3489759178","3649515864"],"slicesMap":{}}