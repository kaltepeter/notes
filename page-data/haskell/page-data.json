{"componentChunkName":"component---src-templates-note-template-tsx","path":"/haskell/","result":{"data":{"markdownRemark":{"html":"<p><a href=\"https://tech.fpcomplete.com/haskell/learn\">https://tech.fpcomplete.com/haskell/learn</a></p>\n<p><a href=\"http://www.cs.nott.ac.uk/~pszgmh/pih.html\">http://www.cs.nott.ac.uk/~pszgmh/pih.html</a></p>\n<p><a href=\"https://repl.it\">https://repl.it</a> - code runner</p>\n<h2>books</h2>\n<p>Programming in Haskell</p>\n<h2>my samples</h2>\n<p><a href=\"https://repl.it/@kaltepeter/programming-in-haskell\">https://repl.it/@kaltepeter/programming-in-haskell</a></p>\n<h2>language details</h2>\n<p><a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#g:13\">https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#g:13</a> - built ins</p>\n<h3>functions</h3>\n<pre><code class=\"language-haskell\">-- conditional\n    abs :: Int -> Int\n    abs n = if n >= 0 then n else -n\n-- guarded\n    abs n | n >= 0 = n\n          | otherwise = -n\n\n    signum n | n  &#x3C; 0 = -1\n             | n == 0 = 0\n             | otherwise = 1\n-- pattern matching\n    not :: Bool -> Bool\n    not False = True\n    not True = False\n\n    &#x26;&#x26; :: Bool -> Bool -> Bool\n    True &#x26;&#x26; True   = True\n    True &#x26;&#x26; False  = False\n    False &#x26;&#x26; True  = False\n    False &#x26;&#x26; False = False\n\n    -- simplified\n    -- _ is wildcard\n    True &#x26;&#x26; True = True\n    _    &#x26;&#x26; _    = False\n\n    -- alt - first value True returns value of second\n    True &#x26;&#x26; b  = b\n    False &#x26;&#x26; _ = False\n\n    -- guarded\n    b &#x26;&#x26; c | b == c    = b\n           | otherwise = False\n\n-- lamda Î»\n    (\\x -> x + x) 2\n\n-- curried operator\n    (+) 1 2\n</code></pre>","frontmatter":{"date":"January 19, 2020","title":"Haskell","tags":["language"]}}},"pageContext":{"slug":"/haskell/"}},"staticQueryHashes":["1796642556","2356112386","3489759178"],"slicesMap":{}}