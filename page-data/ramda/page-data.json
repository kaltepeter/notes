{"componentChunkName":"component---src-templates-note-template-tsx","path":"/ramda/","result":{"data":{"markdownRemark":{"html":"<ul>\n<li><a href=\"https://itnext.io/a-beginners-guide-to-ramda-part-1-7e4a34972e97\">https://itnext.io/a-beginners-guide-to-ramda-part-1-7e4a34972e97</a></li>\n</ul>\n<h2>composing &#x26; currying</h2>\n<ul>\n<li>\n<p><a href=\"https://itnext.io/a-beginners-guide-to-ramda-part-1-7e4a34972e97\">https://itnext.io/a-beginners-guide-to-ramda-part-1-7e4a34972e97</a></p>\n</li>\n<li>\n<p><a href=\"https://robertwpearce.com/ramda-chops-function-currying.html\">https://robertwpearce.com/ramda-chops-function-currying.html</a></p>\n</li>\n<li>\n<p><a href=\"https://tinyurl.com/y6e26lf4\">https://tinyurl.com/y6e26lf4</a></p>\n</li>\n</ul>\n<p>Curry</p>\n<p>example return partial function no curry</p>\n<pre><code class=\"language-typescript\">const rule4 = R.equals('a');\nconst rule5 = R.equals('b');\n\nconst rules = new Map();\nrules.set(4, rule4);\nrules.set(5, rule5);\n\nconst ruleLookup = rId => (rList) => rList.get(rId);\nconsole.log(ruleLookup); // fn(rId)\nconsole.log(ruleLookup(4)); //fn(rList)\nconsole.log(ruleLookup(4)(rules)) // fn(equals)\nconsole.log(ruleLookup(4)(rules)('a')) // true\n</code></pre>\n<p>curry</p>\n<pre><code class=\"language-typescript\">const rule4 = R.equals('a');\nconst rule5 = R.equals('b');\n\nconst rules = new Map();\nrules.set(4, rule4);\nrules.set(5, rule5);\n\nconst ruleLookup = curry((rId, rList) => rList.get(rId));\nconsole.log(ruleLookup); // fn(rId)\nconst r4 = ruleLookup(4);  //fn(rList)\nconsole.log(r4);\nconst appliedRules = r4(rules);\nconsole.log(appliedRules) // fn(equals)\nconsole.log(appliedRules('a')) // true\n\nconst genRule = (rList) => map(ruleLookup, rList);\nconsole.log(genRule);\nrules.set(2, genRule([4,4]));\nconsole.log(rules.get(2)[0](rules)('a'));\nconsole.log(rules.get(2)[1](rules)('a'));\n\nconst fns = map(([fn, v]) => fn(rules)(v), zip(rules.get(2), 'ab'));\nconsole.log(fns); // [true, false]\n</code></pre>\n<h2>Basics</h2>\n<ul>\n<li></li>\n</ul>\n<h2>Map, Filter, Reduce</h2>\n<p><a href=\"https://robertwpearce.com/ramda-chops-map-filter-and-reduce.html\">https://robertwpearce.com/ramda-chops-map-filter-and-reduce.html</a></p>\n<h3>Map Examples</h3>\n<pre><code class=\"language-javascript\">const rule4 = R.equals('a');\nconst rule5 = R.equals('b');\n\nconst rules = new Map();\nrules.set(4, rule4);\nrules.set(5, rule5);\n\nconst getRule = (rId) => rules.get(rId);\nconst genRule = (rList) => map(rId => rules.get(rId), rList);\nconst testGenRule = genRule([4,4]);\nconsole.log(testGenRule[0]('a')); // true\nconsole.log(testGenRule[1]('b')); // false\n</code></pre>","frontmatter":{"date":"April 11, 2021","title":"Ramda","tags":["library"]}}},"pageContext":{"slug":"/ramda/"}},"staticQueryHashes":["1865044719","3489759178","3649515864"],"slicesMap":{}}