{
    "componentChunkName": "component---src-templates-note-template-tsx",
    "path": "/bash/",
    "result": {"data":{"markdownRemark":{"html":"<p><a href=\"https://stackoverflow.com/questions/17029902/using-curl-post-with-variables-defined-in-bash-script-functions\">https://stackoverflow.com/questions/17029902/using-curl-post-with-variables-defined-in-bash-script-functions</a></p>\n<p><a href=\"https://stackoverflow.com/questions/2500436/how-does-cat-eof-work-in-bash\">https://stackoverflow.com/questions/2500436/how-does-cat-eof-work-in-bash</a></p>\n<p><a href=\"http://goo.gl/ZThKCj\">http://goo.gl/ZThKCj</a> - printing strings help</p>\n<p><a href=\"http://goo.gl/HnPkiq\">http://goo.gl/HnPkiq</a> - arithmetic operator</p>\n<p><a href=\"http://goo.gl/g6xtca\">http://goo.gl/g6xtca</a> - arrays</p>\n<p><a href=\"http://goo.gl/xRHo3u\">http://goo.gl/xRHo3u</a> - parameter expansion</p>\n<p><a href=\"https://github.com/aperezdc/perezdecastro.org/blob/master/stash/using-boolean-variables-in-bash.markdown\">https://github.com/aperezdc/perezdecastro.org/blob/master/stash/using-boolean-variables-in-bash.markdown</a> - flag variables in bourne shell</p>\n<p><a href=\"https://kvz.io/blog/2013/11/21/bash-best-practices/\">https://kvz.io/blog/2013/11/21/bash-best-practices/</a> - boiler plate and best practice guide</p>\n<p><a href=\"https://explainshell.com/explain\">https://explainshell.com/explain</a> - amazing visual explanation</p>\n<h3>Bash 4</h3>\n<p><a href=\"http://clubmate.fi/upgrade-to-bash-4-in-mac-os-x/\">http://clubmate.fi/upgrade-to-bash-4-in-mac-os-x/</a></p>\n<p>Post upgrade to use bash 4 in script. change shebang line</p>\n<p><code>#!/usr/local/bin/bash</code></p>\n<p><strong>Configure terminal to use it</strong></p>\n<pre><code class=\"language-text\"># Add the new shell to the list of allowed shells\nsudo bash -c 'echo /usr/local/bin/bash >> /etc/shells'\n# Change to the new shell\nchsh -s /usr/local/bin/bash\n</code></pre>\n<h2>sed</h2>\n<p>appending newlines with mac: <a href=\"https://stackoverflow.com/questions/16576197/how-to-add-new-line-using-sed-mac\">https://stackoverflow.com/questions/16576197/how-to-add-new-line-using-sed-mac</a></p>\n<pre><code class=\"language-text\">echo foo | sed 's/f/f\\'$'\\n/'\n</code></pre>\n<pre><code class=\"language-text\">tokens=$(echo \"$tokens\" | sed ' /^[[:space:]]*}/a \\\n \\\n  ')\n</code></pre>\n<pre><code class=\"language-text\">tokens=$(echo \"${tokens}\" | sed ' /^\\s*$/d;s/},/}/;s/}/}\\'$'\\n\\\\\\n/; ')\n</code></pre>\n<p><a href=\"https://lists.freebsd.org/pipermail/freebsd-questions/2009-March/194500.html\">https://lists.freebsd.org/pipermail/freebsd-questions/2009-March/194500.html</a> - example to safe replace with newlines</p>\n<pre><code class=\"language-text\">a=\"This\n is\n the\n input\n from the\n web server\"\nb=`echo $a`\nsed \"s/foo/$b/\"\n</code></pre>\n<p><a href=\"https://taoofmac.com/space/cli/sed\">https://taoofmac.com/space/cli/sed</a> - examples</p>\n<p><a href=\"https://stackoverflow.com/questions/29613304/is-it-possible-to-escape-regex-metacharacters-reliably-with-sed\">https://stackoverflow.com/questions/29613304/is-it-possible-to-escape-regex-metacharacters-reliably-with-sed</a> - more whitespacing issues</p>\n<h2>awk</h2>\n<pre><code class=\"language-text\">echo \"${tokens}\" | awk 'BEGIN { RS=\"\"; FS=/,/; }; $0 ~ \"jane@github.com\" { print }'\n</code></pre>\n<h2>escaping quotes</h2>\n<p><a href=\"https://stackoverflow.com/questions/13799789/expansion-of-variable-inside-single-quotes-in-a-command-in-bash\">https://stackoverflow.com/questions/13799789/expansion-of-variable-inside-single-quotes-in-a-command-in-bash</a></p>\n<p>wrap with single quote and expand variable</p>\n<pre><code class=\"language-text\">grep '^'\"${APP_NAME}\"''\n</code></pre>\n<h2>args and help</h2>\n<p><a href=\"https://argbash.io/generate\">https://argbash.io/generate</a></p>\n<p><a href=\"bash.md\">http://spf13.com/post/easy-bash-scripting-with-shflags/</a> - documentation module</p>\n<h4>shflags</h4>\n<p><a href=\"https://github.com/kward/shflags\">https://github.com/kward/shflags</a></p>\n<p><strong>Install</strong></p>\n<ol>\n<li>\n<p>Download</p>\n</li>\n<li>\n<p>link to path</p>\n<pre><code class=\"language-text\">ln ~/data/tools/shflags-1.2.2/shflags /usr/local/bin/shflags\n</code></pre>\n</li>\n<li>\n<p>execute</p>\n</li>\n</ol>\n<h2>lint/static analysis</h2>\n<p><a href=\"https://github.com/koalaman/shellcheck\">https://github.com/koalaman/shellcheck</a></p>\n<pre><code class=\"language-text\">brew install shellcheck\n</code></pre>\n<p>execute</p>\n<pre><code class=\"language-text\">shellcheck script.sh\n</code></pre>\n<h2>list directory structure</h2>\n<p><a href=\"https://stackoverflow.com/questions/3455625/linux-command-to-print-directory-structure-in-the-form-of-a-tree\">https://stackoverflow.com/questions/3455625/linux-command-to-print-directory-structure-in-the-form-of-a-tree</a></p>\n<pre><code class=\"language-bash\">ls -R | grep \":$\" | sed -e 's/:$//' -e 's/[^-][^\\/]*\\//--/g' -e 's/^/   /' -e 's/-/|/'\n</code></pre>\n<p>outputs</p>\n<pre><code class=\"language-bash\">   |-jobs\n   |---PCF-Upgrade\n   |-----jobs\n   |-------Bulk-Build-Pipelines\n   |---------jobs\n</code></pre>\n<p>count directories</p>\n<pre><code class=\"language-bash\">ls -R | grep \":$\" | wc -l\n</code></pre>\n<p>show structure</p>\n<pre><code class=\"language-bash\">ls -la | xargs ls -la \\{\\}\nls -lrt -d -1 $PWD/* | xargs ls -la \\{\\}\n</code></pre>\n<p>find by dir name</p>\n<pre><code class=\"language-bash\">find . -type d -name builds -exec rm -rf {} \\;\n</code></pre>\n<p>find string in directory</p>\n<pre><code class=\"language-bash\">grep -rnw /var/lib/jenkins -e 'utils/util'\n</code></pre>\n<h2>delete fast</h2>\n<p><a href=\"https://www.kinamo.be/en/support/faq/efficiently-remove-a-zillion-files-on-linux-servers\">https://www.kinamo.be/en/support/faq/efficiently-remove-a-zillion-files-on-linux-servers</a></p>\n<pre><code class=\"language-bash\">rsync -a --delete empty_dir/ dir_to_delete\n</code></pre>\n<h2>move vs. copy vs. delete</h2>\n<p>cp -> slow</p>\n<p>mv -> faster</p>\n<p>delete -> fast as mv</p>\n<p>mv (rename in place) -> fastest</p>\n<h2>cli inputs / help</h2>\n<p><a href=\"https://github.com/kward/shflags/wiki/Documentation12x\">https://github.com/kward/shflags/wiki/Documentation12x</a></p>\n<h2>styleguide</h2>\n<p><a href=\"https://google.github.io/styleguide/shell.xml#Builtin_Commands_vs._External_Commands\">https://google.github.io/styleguide/shell.xml#Builtin_Commands_vs._External_Commands</a></p>\n<p><a href=\"https://www.chromium.org/chromium-os/shell-style-guidelines#TOC-Default-Assignments\">https://www.chromium.org/chromium-os/shell-style-guidelines#TOC-Default-Assignments</a></p>\n<h2>colors</h2>\n<p><a href=\"https://misc.flogisoft.com/bash/tip_colors_and_formatting\">https://misc.flogisoft.com/bash/tip_colors_and_formatting</a></p>\n<h2>use python to get json value</h2>\n<pre><code>DOMAIN_NAME=$(curl -s http://localhost:4040/api/tunnels/jenkins | python -c 'import sys, json; print json.load(sys.stdin)[\"public_url\"]' | sed 's/http:\\/\\/\\(.*\\)/\\1/')\n</code></pre>\n<h2>colors</h2>\n<p><a href=\"https://misc.flogisoft.com/bash/tip_colors_and_formatting\">https://misc.flogisoft.com/bash/tip_colors_and_formatting</a></p>\n<h2>rerun with sudo</h2>\n<pre><code class=\"language-bash\">sudo !!\n</code></pre>","frontmatter":{"date":"October 09, 2019","title":"Bash","tags":["nix"]}}},"pageContext":{"slug":"/bash/"}},
    "staticQueryHashes": ["1929983096","3649515864"]}