{"componentChunkName":"component---src-templates-note-template-tsx","path":"/workshops/fem/fem-vim-fundamentals/","result":{"data":{"markdownRemark":{"html":"<h1>VIM Fundamentals</h1>\n<p><a href=\"https://theprimeagen.github.io/vim-fundamentals/\">https://theprimeagen.github.io/vim-fundamentals/</a></p>\n<p><a href=\"https://vim.rtorr.com/\">https://vim.rtorr.com/</a></p>\n<p><a href=\"https://vimways.org/2019/writing-vim-plugin/\">https://vimways.org/2019/writing-vim-plugin/</a> - plugin tutorial</p>\n<p><a href=\"https://github.com/tpope/vim-fugitive\">https://github.com/tpope/vim-fugitive</a> - git nav in vim</p>\n<h2>Cheat Sheet</h2>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Use</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>j</td>\n<td>move down</td>\n</tr>\n<tr>\n<td>k</td>\n<td>move up</td>\n</tr>\n<tr>\n<td>l</td>\n<td>move right</td>\n</tr>\n<tr>\n<td>h</td>\n<td>move left</td>\n</tr>\n<tr>\n<td>w</td>\n<td>jump forward to word boundry</td>\n</tr>\n<tr>\n<td>b</td>\n<td>jump backward to word boundry</td>\n</tr>\n<tr>\n<td>yy</td>\n<td>copy lines, called yank</td>\n</tr>\n<tr>\n<td>dd</td>\n<td>delete line</td>\n</tr>\n<tr>\n<td>p</td>\n<td>paste below</td>\n</tr>\n<tr>\n<td>P</td>\n<td>paste above</td>\n</tr>\n<tr>\n<td>_</td>\n<td>first non whitespace of line</td>\n</tr>\n<tr>\n<td>t\"</td>\n<td>go to before \"</td>\n</tr>\n<tr>\n<td>f</td>\n<td>find char</td>\n</tr>\n<tr>\n<td>I</td>\n<td>insert at beginning of line</td>\n</tr>\n<tr>\n<td>c</td>\n<td>delete and enter insert mode</td>\n</tr>\n<tr>\n<td>cc</td>\n<td>delete line and enter insert</td>\n</tr>\n<tr>\n<td>D</td>\n<td>delete from cursor to end of line</td>\n</tr>\n<tr>\n<td>S</td>\n<td>delete line and insert</td>\n</tr>\n<tr>\n<td>fT</td>\n<td>forward to T char</td>\n</tr>\n<tr>\n<td>dt)</td>\n<td>(d)elete (t) ), replace if</td>\n</tr>\n<tr>\n<td>{</td>\n<td>jump backward paragraph</td>\n</tr>\n<tr>\n<td>}</td>\n<td>jump forward paragraph</td>\n</tr>\n<tr>\n<td>]m</td>\n<td>jump to open squirly</td>\n</tr>\n<tr>\n<td>%</td>\n<td>jump between pairs, [{(</td>\n</tr>\n<tr>\n<td>di{</td>\n<td>delete between squirly brace</td>\n</tr>\n<tr>\n<td>diw</td>\n<td>delete from within word</td>\n</tr>\n</tbody>\n</table>\n<h2>Modes</h2>\n<p>(n) Normal\n<code>zz</code>: re-center window scroll\n<code>mA</code> mark with A as global mark\n<code>'A</code> navigate to mark\n<code>mb</code> mark within a file\n<code>ctrl+^</code> back to prev file\n<code>ctrl+o</code> jump back to where you were\n<code>\"byy</code> yank into b register\n<code>\"bp</code> paste from b register\n<code>ctrl+u</code> page up jump\n<code>ctrl+d</code> page down jump</p>\n<p>(i) Insert<br>\n<code>i</code>: insert left of cursor\n<code>a</code>: insert right of cursor\n<code>I</code>: insert at beginning of line\n<code>A</code>: insert at end of line\n<code>o</code>: insert below line\n<code>O</code>: insert above line</p>\n<p>(v) Visual\n(V) Visual Line\n(ctrl+w) window mode</p>\n<h2>Commands</h2>\n<p><code>:reg</code>: show register of commands\n<code>:set scrolloff=8</code> set the scroll to auto scroll when 8 lines remain\n<code>:set number</code> add line numbers\n<code>:set relativenumber</code> or <code>:set rnu</code> set the current line as relative to count lines\n<code>6dj</code>: delete 6 lines from current position, same as <code>7dd</code>\n<code>V6jd</code>: visually select 6 lines and delete\n<code>:set norelativenumber</code> turn off relative numbers\n<code>:h expandtab</code> view help for expandtab\n<code>:h expand ctrl+d</code> expand help popup menu\n<code>:colorscheme koehler</code> set color to koehler\n<code>:Ex</code> explore current dir\n<code>:Sex</code> split explorer\n<code>:Vex</code> vertical split explorer <code>ctrl+w+o</code> close splits\n<code>:so %</code> source current file\n<code>:e</code> edit, use glob patterns for fuzzy find\n<code>:ju</code> see jump list\n<code>:w</code> write file\n<code>:set hls ic</code> set highlight and incremental search\n<code>qa</code> begin recording macro a\n<code>q</code> quit recording macro</p>\n<h2>.vimrc</h2>\n<p>Edit <code>~/.vimrc</code></p>\n<pre><code class=\"language-bash\">set scrolloff=8\nset number\nset relativenumber\nset tabstop=4 softtabstop=4\nset shiftwidth=4\nset expandtab\nset smartindent\n\ncall plug#begin('~/.vim/plugged')\nPlug 'junegunn/fzf', { 'do': { -> fzf#install() } }\nPlug 'junegunn/fzf.vim'\nPlug 'ayu-theme/ayu-vim'\ncall plug#end()\n\nset termguicolors     \" enable true colors support\nlet ayucolor=\"mirage\" \" for mirage version of theme\ncolorscheme ayu\n\nlet mapleader = \" \"\n\nnnoremap &#x3C;leader>pv :Vex&#x3C;CR>\nnnoremap &#x3C;leader>&#x3C;CR> :so ~/.vimrc&#x3C;CR>\nnnoremap &#x3C;C-p> :GFiles&#x3C;CR>\nnoremap &#x3C;leader>pf :Files&#x3C;CR>\nvnoremap &#x3C;leader>y \"+y\nnnoremap &#x3C;leader>y \"+y\n</code></pre>","frontmatter":{"date":"January 28, 2022","title":"FEM functional programming","tags":["workshop","front-end-masters"]}}},"pageContext":{"slug":"/workshops/fem/fem-vim-fundamentals/"}},"staticQueryHashes":["1796642556","2356112386","3489759178"],"slicesMap":{}}