{"componentChunkName":"component---src-templates-note-template-tsx","path":"/workshops/fem/fem-ml-javascript/","result":{"data":{"markdownRemark":{"html":"<p>Course: <a href=\"https://frontendmasters.com/workshops/machine-learning/\">https://frontendmasters.com/workshops/machine-learning/</a></p>\n<p><a href=\"https://fem-ml-workshop.netlify.app/\">https://fem-ml-workshop.netlify.app/</a></p>\n<p><a href=\"https://github.com/charliegerard/fem-ml-workshop\">https://github.com/charliegerard/fem-ml-workshop</a></p>\n<p><a href=\"https://charliegerard.dev/projects\">https://charliegerard.dev/projects</a></p>\n<h2>Basics</h2>\n<p><a href=\"https://github.com/tensorflow/tfjs-models\">https://github.com/tensorflow/tfjs-models</a></p>\n<p>Overfitting: model is too close to training data, value of 1. Can't predict.</p>\n<ul>\n<li>Supervised learning: given labelled data.</li>\n<li>Unsupervised learning: given a dataset without labels. Use is clustering.</li>\n<li>Semi-supervised learning: combines supervised and unsupervised. Can achieve higher accuracy.</li>\n<li>Reinforcement learning: training provides rewards and punishment. Used in gaming.</li>\n</ul>\n<h2>Pre-trained Models</h2>\n<h3>Finding pre-trained models</h3>\n<ul>\n<li><a href=\"https://www.kaggle.com/models\">Kaggle</a> and more specifically <a href=\"https://www.kaggle.com/search?q=tensorflow.js+in%3Amodels\">TensorFlow.js models</a></li>\n<li><a href=\"https://github.com/tensorflow/tfjs-models\">TensorFlow.js models</a></li>\n<li><a href=\"https://huggingface.co/models\">Hugging face</a></li>\n</ul>\n<h3>Choosing a Model</h3>\n<ul>\n<li>What are you building?</li>\n<li>Quality of the training data</li>\n<li>Quantity of the training data</li>\n<li>Can you have access to the list of classes/labels?</li>\n</ul>\n<h2>Tools</h2>\n<ul>\n<li><a href=\"https://www.tensorflow.org/js\">TensorFlow.js</a></li>\n<li><a href=\"https://ml5js.org/\">ml5.js</a></li>\n<li><a href=\"https://brain.js.org/#/\">Brain.js</a></li>\n<li><a href=\"https://github.com/karpathy/convnetjs\">ConvNetJS</a></li>\n<li><a href=\"https://transcranial.github.io/keras-js/#/\">Keras.js</a></li>\n</ul>\n<h2>Transfer Learning</h2>\n<p>Reusing pre-trained model for a new task.</p>\n<h3>Quick start</h3>\n<ul>\n<li><a href=\"https://teachablemachine.withgoogle.com/\">Teachable machine</a></li>\n</ul>\n<p><a href=\"https://teachablemachine.withgoogle.com/train/image\">https://teachablemachine.withgoogle.com/train/image</a></p>\n<p><a href=\"https://experiments.withgoogle.com/tiny-motion-trainer\">https://experiments.withgoogle.com/tiny-motion-trainer</a></p>\n<h2>Building a Model</h2>\n<p><a href=\"https://cs231n.github.io/convolutional-networks/\">https://cs231n.github.io/convolutional-networks/</a></p>\n<p>Split training and test data.</p>\n<p><a href=\"https://neurosity.co/tech-specs\">https://neurosity.co/tech-specs</a></p>\n<p><a href=\"https://www.youtube.com/playlist?list=PLOU2XLYxmsILr3HQpqjLAUkIPa5EaZiui\">https://www.youtube.com/playlist?list=PLOU2XLYxmsILr3HQpqjLAUkIPa5EaZiui</a></p>\n<p><a href=\"https://www.linkedin.com/pulse/welcome-tensorflowjs-monthly-newsletter-jason-mayes/\">https://www.linkedin.com/pulse/welcome-tensorflowjs-monthly-newsletter-jason-mayes/</a></p>\n<p><a href=\"https://experiments.withgoogle.com/tiny-motion-trainer\">https://experiments.withgoogle.com/tiny-motion-trainer</a></p>\n<p><a href=\"https://neurotechx.com/\">https://neurotechx.com/</a></p>","frontmatter":{"date":"April 18, 2024","title":"FEM: Machine Learning with JavaScript","tags":["workshop","front-end-masters","javascript","machine-learning"]}}},"pageContext":{"slug":"/workshops/fem/fem-ml-javascript/"}},"staticQueryHashes":["1796642556","2356112386","3489759178"],"slicesMap":{}}