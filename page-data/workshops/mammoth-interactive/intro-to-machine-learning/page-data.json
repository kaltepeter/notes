{"componentChunkName":"component---src-templates-note-template-tsx","path":"/workshops/mammoth-interactive/intro-to-machine-learning/","result":{"data":{"markdownRemark":{"html":"<h2>What is it?</h2>\n<ul>\n<li>How can we build computer systems that automatically improve with experience?</li>\n<li>What are the laws that govern all learning processes?</li>\n</ul>\n<h2>Example</h2>\n<ul>\n<li>Data mine historical medical records to determine the best treatment</li>\n<li>Search engines that automatically customize to your interest</li>\n</ul>\n<h2>When</h2>\n<ul>\n<li>When software is too complex to manually design</li>\n<li>When software should change after it is released</li>\n</ul>\n<h2>Branches</h2>\n<ol>\n<li>Supervised learning\n<ul>\n<li>learns a function to map an input to an output</li>\n<li>uses sample input/output pairs</li>\n<li>analyzes training data</li>\n<li>infers a function</li>\n<li>concept learning: parallel task in psychology.</li>\n<li>apply knowledge across a variety of circumstances</li>\n<li>steps\n<ol>\n<li>determine the type of training examples</li>\n<li>gather training set, representative of real world use</li>\n<li>represent input features. affects accuracy. Transform the input into a feature vector</li>\n<li>determine the structure of the learned function and algorithm</li>\n<li>train the algorithm with training set</li>\n<li>evaluate the accurary with a testing set</li>\n<li>deploy the model</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>Unsupervised learning\n<ul>\n<li>examples\n<ul>\n<li>recommend purchases or videos</li>\n<li>group customers based on attributes</li>\n<li>genetic and species grouping</li>\n<li>distinguish different kinds of tissues</li>\n<li>make a customer persona</li>\n<li>would customer buy a if bought b</li>\n<li>detect bot activity</li>\n<li>recognize handwriting, speech, create speech, tag parts of a speech, translate text</li>\n</ul>\n</li>\n<li>looks for new patterns in data with no pre-existing labels</li>\n<li>minimal human supervision</li>\n<li>principal component analysis\n<ul>\n<li>plot them on a graph</li>\n<li>data is noisy</li>\n<li>dimensionsality reduction</li>\n<li>get each data point's first few important components</li>\n<li>preserves as much variation</li>\n</ul>\n</li>\n<li>cluster analysis\n<ul>\n<li>find commonalities in data</li>\n<li>reacts based on the presence or absence of the commonalities in every new input</li>\n<li>helps detect data points that do not fit into any group</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Reinforment learning (combo of the two)</li>\n</ol>\n<h2>Workflow</h2>\n<ul>\n<li>gather data</li>\n<li>preprocess data</li>\n<li>train data</li>\n<li>train model\n<ul>\n<li>model/parameter tuning loop</li>\n</ul>\n</li>\n<li>test model</li>\n<li>deploy model</li>\n</ul>\n<h2>Types of Models</h2>\n<h3>Clustering Models</h3>\n<ul>\n<li>Group similar objects</li>\n<li>Help label data for supervixed machine learning</li>\n<li>e.g. K means, K means++, K medoids, Agglomerative clustering DBSCAN</li>\n</ul>\n<h3>Regression Models</h3>\n<ul>\n<li>output variable can take continuous values</li>\n<li>example: predict price based on features</li>\n<li>e.g. Linear regression, lasso regression, ridge regression, SVM regression, Decision Tree regression</li>\n</ul>\n<h3>Deep Learning</h3>\n<ul>\n<li>mimics the human brain with nerual network</li>\n<li>example: classify images</li>\n<li>e.g. computer vision, natural language processing, autonomous vehicles, image filtering, text generation</li>\n</ul>\n<h3>classification models</h3>\n<ul>\n<li>predict teh type of object within a number of options</li>\n<li>examples: check email for spam, check reviews for positive/negative, check species of a flower</li>\n<li>e.g. K-Nearest neighbors, naive bayes, logistic regression, SVM, decision tree, ensemble</li>\n</ul>\n<h4>K-Nearest Neighbors</h4>\n<ul>\n<li>assumes similar things are near each other</li>\n<li>calculates the distance between points on a graph identify similar objects</li>\n</ul>\n<h4>Naive Bayes</h4>\n<ul>\n<li>assumes the presence of a feature in a class is unrelated to other features</li>\n<li>a cat has whiskers, tail and nose, but each is independent</li>\n</ul>\n<h4>Logistic Regression</h4>\n<ul>\n<li>used when the dependent variable (target) is categorical</li>\n<li>example: is a review positive or negative?, is an email spam or not</li>\n</ul>\n<h4>Support Vector Machine</h4>\n<ul>\n<li>finds a plane that has the maximum distance between data points or both classes</li>\n<li></li>\n</ul>\n<h2>Handling Noise</h2>\n<ul>\n<li>split training set into 70% learning and 30% validation</li>\n<li>build model on learning set</li>\n<li>iterate as long as acuracy increases</li>\n<li>weight are calculated based on information gain</li>\n</ul>\n<h2>Tools</h2>\n<ul>\n<li>Keras nural network in python, integrated in tensor flow. <a href=\"https://keras.io/guides/functional_api/\">https://keras.io/guides/functional_api/</a></li>\n<li>tensorflow by google</li>\n<li>tensorflow math libray for nerual networks</li>\n<li>tensorflow-js: fast enough for deep learning, use GPU</li>\n<li>pandas: extract, transform, and load\n<ul>\n<li>handle missing data</li>\n<li>mutate size</li>\n<li>align data</li>\n<li>convert data into dataframe objects</li>\n<li>join datasets</li>\n<li>pivot datasets</li>\n<li>time series functionality</li>\n</ul>\n</li>\n<li>matplotlib: data exploration\n<ul>\n<li>2d plotting library</li>\n<li>genrate plots, histograms, bar charts, charts, scatter plots</li>\n</ul>\n</li>\n<li>numpy: data evaluation\n<ul>\n<li>scientific computing</li>\n<li>powerful n-dimensional arrays</li>\n<li>math functions</li>\n</ul>\n</li>\n<li>scikit learn: data modeling\n<ul>\n<li>simple and efficient tools for predictive data analysis</li>\n<li>models: classification, regression, clustering, dimensionality reduction, model selection, preprocessing</li>\n</ul>\n</li>\n<li>plotly\n<ul>\n<li>build interactive images</li>\n<li>open source</li>\n<li>libraries for javascript, python and R</li>\n<li>builds interactive plots as html</li>\n<li>users can zoom, hover, etc</li>\n<li>data is locked to exported state</li>\n</ul>\n</li>\n<li>dash\n<ul>\n<li>create dashboard web apps</li>\n<li>full dashboard</li>\n<li>builds an app at a url</li>\n</ul>\n</li>\n<li>tf lite\n<ul>\n<li>run ml on mobile, embedded and IOT devices</li>\n<li>open source deep learning</li>\n<li>little latency</li>\n<li>privacy (no data leaves)</li>\n<li>connectivity not required</li>\n<li>size: smaller</li>\n<li>power consumption</li>\n<li>android, ios, linux+</li>\n<li>hardware accelerated, high performance</li>\n</ul>\n</li>\n</ul>\n<h2>Steps</h2>\n<ol>\n<li>collect dataset</li>\n<li>divide into training and testing sets</li>\n<li>generate h(x) with traning set</li>\n<li>measure % of examples of the testing set correctly classified by h(x)</li>\n</ol>\n<h2>Watch out!</h2>\n<ol>\n<li>keep training and testing sets separate</li>\n<li>An algorithm remembers the testing sets</li>\n<li>Don't change the algorithm after testing and re-test on the same testing set\n<ul>\n<li>if the algorithm sees the same testing set twice it will have a higher accuracy than it should</li>\n</ul>\n</li>\n</ol>","frontmatter":{"date":"January 23, 2024","title":"Intro to Machine Learning","tags":["machine-learning","course","mammoth-interactive"]}}},"pageContext":{"slug":"/workshops/mammoth-interactive/intro-to-machine-learning/"}},"staticQueryHashes":["1796642556","2356112386","3489759178"],"slicesMap":{}}