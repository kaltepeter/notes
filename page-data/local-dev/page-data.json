{"componentChunkName":"component---src-templates-note-template-tsx","path":"/local-dev/","result":{"data":{"markdownRemark":{"html":"<h2>SSL for local</h2>\n<ol>\n<li><code>mkdir certs</code></li>\n<li><code>touch certs/.gitkeep</code></li>\n<li><code>echo \"*.pem\" >> ./gitignore</code></li>\n<li>Run the following to generate a local cert. <code>./generate-certs.sh</code></li>\n</ol>\n<pre><code class=\"language-bash\">#!/usr/bin/env bash\n# ./generate-certs.sh\nset -o errexit\nset -o pipefail\nset -o nounset\n[[ ${DEBUG:-} == true ]] &#x26;&#x26; set -o xtrace\nreadonly __dir=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &#x26;&#x26; pwd)\"\n\nif ! command -v mkcert > /dev/null; then\n  echo \"This repo requires mkcert to genearte a local trusted cert. Install with 'brew install mkcert' or follow os instructions.\"\nfi\n\nif [[ ! -f ./certs/localhost+4.pem ]]; then\n    mkcert -install\n    mkcert localhost local.mydomain.com \"*.local.mydomain.com\" 127.0.0.1 ::1\nfi\n\n</code></pre>\n<h2>Nginx local</h2>\n<p>Run behind Nginx like another env locally. This example forwards all traffic to port 3666</p>\n<pre><code class=\"language-nginx\"># local.nginx.conf.example\nserver {\n  listen         443 ssl;\n  listen         [::]:443 ssl;\n  ssl_certificate      CERT_LOCATION;\n  ssl_certificate_key  CERT_KEY_LOCATION;\n  server_name .local.mydomain.com;\n  # \tinclude includes/apm.conf;\n\n  location / {\n    proxy_pass https://localhost:3666;\n  }\n}\n</code></pre>\n<ol>\n<li>\n<p>Install nginx locally <code>brew install nginx</code></p>\n</li>\n<li>\n<p>Start the service <code>brew services start nginx</code></p>\n</li>\n<li>\n<p><code>echo \"local.nginx.conf\" >> .gitignore</code></p>\n</li>\n<li>\n<p>Run the script below <code>./local.nginx.sh</code></p>\n<pre><code class=\"language-bash\"># local.nginx.sh\n#!/usr/bin/env bash\nset -o errexit\nset -o pipefail\nset -o nounset\n[[ ${DEBUG:-} == true ]] &#x26;&#x26; set -o xtrace\n__dir=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &#x26;&#x26; pwd)\"\n\nsource_nginx_conf=\"${__dir}/local.nginx.conf\"\ncp \"${source_nginx_conf}.example\" \"${__dir}/local.nginx.conf\"\n\nnginx_servers_path=$(brew info nginx | grep \"nginx will load all files in\" | sed -e 's/nginx will load all files in \\(.*\\)./\\1/')\nsed -i \"\" -e \"s|CERT_LOCATION|${nginx_servers_path}../certs/localhost+4.pem|\" \"${source_nginx_conf}\"\nsed -i \"\" -e \"s|CERT_KEY_LOCATION|${nginx_servers_path}../certs/localhost+4-key.pem|\" \"${source_nginx_conf}\"\n\nif [[ ! -d \"${nginx_servers_path}/../certs\" ]]; then\n    mkdir -p \"${nginx_servers_path}/../certs\"\nfi\n\nfind \"${__dir}/certs\" -type f ! -iname .gitkeep -exec ln -sf {} \"${nginx_servers_path}/../certs\" \\;\nln -sf \"${__dir}/local.nginx.conf\" \"${nginx_servers_path}\"\n\nnginx -s reload\n</code></pre>\n</li>\n<li>\n<p>Edit your <code>package.json</code> if node.</p>\n<pre><code class=\"language-json\">\"start:dev2\": \"HTTPS=true SSL_CRT_FILE=certs/localhost+4.pem SSL_KEY_FILE=certs/localhost+4-key.pem HOST=local.mydomain.com npm run start:dev\",\n</code></pre>\n</li>\n</ol>","frontmatter":{"date":"June 20, 2023","title":"Local Dev","tags":["productivity","tools"]}}},"pageContext":{"slug":"/local-dev/"}},"staticQueryHashes":["1865044719","3489759178","3649515864"],"slicesMap":{}}